#!/bin/sh

routor_ip_address=...
routor_username=...
routor_password=...
provider_username=...

# Display IP address before process
ip_address=`curl inet-ip.info -Ss`
echo Current IP adress: ${ip_address}

# Get security-token from list page
security_token=`curl ${routor_ip_address}/ntt/basic/v4pppoe -Ss -u ${routor_username}:${routor_password} | xmllint --html --xpath "string(//form[@id='SETTING_INFO_FORM']/input[@name='SECURITY_TOKEN']/@value)" -`

# Get security-token from setting page
security_token=`curl ${routor_ip_address}/ntt/basic/v4pppoe/detail -Ss -u ${routor_username}:${routor_password} -c cookie.txt -X POST -d pppoeSessionID=1 -d SECURITY_TOKEN=${security_token} | xmllint --html --xpath "string(//form/input[@name='SECURITY_TOKEN']/@value)" -`

# Submit setting
result_status=`curl ${routor_ip_address}/ntt/basic/v4pppoe/detail/setting -Ss -o /dev/null -w '%{http_code}' -u ${routor_username}:${routor_password} -b cookie.txt -X POST -d pppoeSessionID=1 -d connectionName=isp -d userName=${provider_username} -d password=xxxx -d autoIPMode=1 -d autoDNSFlag=true -d authMode=1 -d connectMode=1 -d initialDisconnectTime=30 -d pppoeKeepFlag=true -d lcpInterval=1 -d initialLcpInterval=1 -d lcpRetryNumber=10 -d initialLcpRetryNumber=10 -d passwordEditFlag=false -d SECURITY_TOKEN=${security_token}`

echo Done with status ${result_status}

# Display IP address after process
ip_address=`curl inet-ip.info -Ss`
echo New IP adress: ${ip_address}
